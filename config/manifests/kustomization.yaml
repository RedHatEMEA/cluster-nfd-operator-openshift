apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

# These resources constitute the fully configured set of manifests
# used to generate the 'manifests/' directory in a bundle.
resources:
- bases/node-feature-discovery-operator.clusterserviceversion.yaml
- ../default
- ../prometheus
- ../samples
- ../scorecard

patches:
- target:
    kind: ClusterServiceVersion
  patch: |-
    - op: add
      path: /metadata/annotations
      value:
        operators.openshift.io/infrastructure-features: '["disconnected"]'
        operatorframework.io/cluster-monitoring: "true"
        operatorframework.io/suggested-namespace: openshift-nfd
        capabilities: Deep Insights
        provider: Red Hat
        repository: https://github.com/openshift/cluster-nfd-operator
        support: Red Hat
        categories: Integration & Delivery,OpenShift Optional
        containerImage: quay.io/openshift/origin-cluster-nfd-operator:4.10
        description: "'The Node Feature Discovery Operator manages the detection of hardware features and configuration in a Kubernetes cluster by labeling the nodes with hardware-specific information. The Node Feature Discovery (NFD) will label the host with node-specific attributes, like PCI cards, kernel, or OS version, and many more.\n'+'\n'+'NFD consists  of the following software components:\n'+'\n'+'The NFD Operator is based on the Operator Framework an open source toolkit to manage Kubernetes native applications, called Operators, in an effective, automated, and scalable way.\n'+'\n'+'##NFD-Master\n'+'NFD-Master is the daemon responsible for communication towards the Kubernetes API. That is, it receives labeling requests from the worker and modifies node objects accordingly.\n'+'\n'+'##NFD-Worker\n'+'NFD-Worker is a daemon responsible for feature detection. It then communicates the information to nfd-master which does the actual node labeling. One instance of nfd-worker is supposed to be running on each node of the cluster,\n'+'\n'+'##NFD-Topology-Updater\n'+'NFD-Topology-Updater is a daemon responsible for examining allocated resources on a worker node to account for resources available to be allocated to new pod on a per-zone basis (where a zone can be a NUMA node). It then communicates the information to nfd-master which does the NodeResourceTopology CR creation corresponding to all the nodes in the cluster. One instance of nfd-topology-updater is supposed to be running on each node of the cluster.'"
    - op: add
      path: /metadata/spec
      value:
        description: "'The Node Feature Discovery Operator manages the detection of hardware features and configuration in a Kubernetes cluster by labeling the nodes with hardware-specific information. The Node Feature Discovery (NFD) will label the host with node-specific attributes, like PCI cards, kernel, or OS version, and many more.\n'+'\n'+'NFD consists  of the following software components:\n'+'\n'+'The NFD Operator is based on the Operator Framework an open source toolkit to manage Kubernetes native applications, called Operators, in an effective, automated, and scalable way.\n'+'\n'+'##NFD-Master\n'+'NFD-Master is the daemon responsible for communication towards the Kubernetes API. That is, it receives labeling requests from the worker and modifies node objects accordingly.\n'+'\n'+'##NFD-Worker\n'+'NFD-Worker is a daemon responsible for feature detection. It then communicates the information to nfd-master which does the actual node labeling. One instance of nfd-worker is supposed to be running on each node of the cluster,\n'+'\n'+'##NFD-Topology-Updater\n'+'NFD-Topology-Updater is a daemon responsible for examining allocated resources on a worker node to account for resources available to be allocated to new pod on a per-zone basis (where a zone can be a NUMA node). It then communicates the information to nfd-master which does the NodeResourceTopology CR creation corresponding to all the nodes in the cluster. One instance of nfd-topology-updater is supposed to be running on each node of the cluster.'"
    - op: add
      path: /metadata/annotations
      value:
        operators.operatorframework.io/internal-objects: '["noderesourcetopologies.topology.node.k8s.io"]'
